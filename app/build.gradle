apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'me.tatarka.retrolambda'

def releaseTime() {
    //返回发布的 北京时间
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC+8"))
}


def keyStore = file('D:\\yangxiaoge.jks')

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
    }

    // 配置签名文件
    signingConfigs {
         // debug时打包用的签名
         debug {

         }
        // release时打包用的签名
        app1 {
            storeFile file("D:\\yangxiaoge.jks")
            storePassword project.hasProperty('STOREPASS') ? STOREPASS : ''
            keyAlias project.hasProperty('KEYALIAS') ? KEYALIAS : ''
            keyPassword project.hasProperty('KEYPASS') ? KEYPASS : ''
        }
    }

    buildTypes {
        debug {
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"

            versionNameSuffix "-debug"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
        }

      /*  release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            //混淆代码的功能
            minifyEnabled false
            //压缩对齐生成的apk包
            zipAlignEnabled true
            //指定混淆规则，需要压缩优化的混淆要把proguard-android.txt换成proguard-android.txt
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //移除无用的资源文件
            shrinkResources true
            //启用multidex的支持
            multiDexEnabled true

            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "umeng"]

            if (keyStore.exists()) {
                println "Mumuxi: using yangxiaoge's key"
                signingConfig signingConfigs.app1
            } else {
                println "Mumuxi: using default key"
            }

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        // 输出apk名称为Mumuxi_v1.0_2015-01-15_wandoujia.apk
                        def fileName = "Mumuxi_v${defaultConfig.versionName}_${releaseTime()}_${variant.productFlavors[0].name}.apk"
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
        }*/
    }

    // 友盟多渠道打包 这种写法参考 : http://www.jianshu.com/p/a9ccdf67ca6c 和 http://stormzhang.com/devtools/2015/01/15/android-studio-tutorial6/
    productFlavors {
        wandoujia {}
        _360 {}
        tencent{}
    }
    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }
    // 友盟多渠道打包 end

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildToolsVersion '25.0.0'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'

    compile rootProject.ext.dependencies["appcompat-v7"]
    compile rootProject.ext.dependencies["design"]
    compile rootProject.ext.dependencies["support-v13"]
    compile rootProject.ext.dependencies["cardview-v7"]
    //easyrecyclerview ( https://github.com/Jude95/EasyRecyclerView ), 注意EasyRecyclerView本质并不是一个RecyclerView
    compile rootProject.ext.dependencies["easyrecyclerview"]
    //circleimageview
    compile rootProject.ext.dependencies["circleimageview"]
    //material-dialogs
    compile rootProject.ext.dependencies["material-dialogs"]

    //Rx,以及网络
    compile rootProject.ext.dependencies["rxjava"]
    compile rootProject.ext.dependencies["rxandroid"]
    compile rootProject.ext.dependencies["retrofit"]
    compile rootProject.ext.dependencies["converter-gson"]
    compile rootProject.ext.dependencies["adapter-rxjava"]
    compile rootProject.ext.dependencies["logging-interceptor"]
    compile rootProject.ext.dependencies["okhttp"]

    //glide
    compile rootProject.ext.dependencies["glide"]
    //https://github.com/chrisbanes/PhotoView ( PhotoView是一个开源的图片查看库，可以实现图片的浏览，手势放大缩小等操作，)
    compile rootProject.ext.dependencies["photoView"]
    //过度动画 loading加载 (https://github.com/zzz40500/android-shapeLoadingView)
    compile rootProject.ext.dependencies["shapeLoadingView"]
    // 懒人框架
    compile rootProject.ext.dependencies["butterknife"]

    compile 'com.tencent.bugly:crashreport:latest.release' //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.2.0
//    compile 'im.fir:fir-sdk:latest.integration@aar'
    compile 'com.google.android.gms:play-services-analytics:8.3.0'
    compile 'com.tbruyelle.rxpermissions:rxpermissions:0.9.4@aar'

    debugCompile 'com.amitshekhar.android:debug-db:1.0.1' //https://github.com/amitshekhariitbhu/Android-Debug-Database  用于调试 android 数据库 和 sharedpreferences

    compile 'com.jakewharton.scalpel:scalpel:1.1.2' //Jake Wharton 开发的一个非常创新的开源工具，以 3d 视角浏览整个 app 的布局情况。
}
